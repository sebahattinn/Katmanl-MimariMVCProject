@model IEnumerable<OnlineGallery.Models.User>

<h2>@ViewData["Title"]</h2>

<div class="mt-3">
    <div style="margin-bottom: 10px;">
        <button id="add-user" class="btn btn-success">Kullanıcı Ekle</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="delete-user" class="btn btn-danger">Kullanıcı Sil</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="edit-user" class="btn btn-warning">Kullanıcı Düzenle</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="load-user-list" class="btn btn-primary">Kullanıcıları Listele</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="add-artwork" class="btn btn-success">Tablo Ekle</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="delete-artwork" class="btn btn-danger">Tablo Sil</button>
    </div>
    <div style="margin-bottom: 10px;">
        <button id="edit-artwork" class="btn btn-warning">Tablo Düzenle</button>
    </div>
</div>

<div id="user-list-container">
    @await Html.PartialAsync("UserList", Model)
</div>

<div id="add-user-form-container" style="display: none;">
    @await Html.PartialAsync("EditUserPartialView", new OnlineGallery.Models.User())
</div>

<div id="add-artwork-form-container" style="display: none;">
    @await Html.PartialAsync("AddArtworkPartialView", new OnlineGallery.Models.Artwork
{
    Title = "Default Title",
    Description = "Default Description",
    ImageUrl = "default-image-url.jpg",
    Price = 0.0m,
    CategoryId = 1,
    Category = new OnlineGallery.Models.Category() // Set the required Category property
})
</div>

<div id="delete-artwork-form-container" style="display: none;">
    @await Html.PartialAsync("DeleteArtworkPartialView", new OnlineGallery.Models.Artwork
{
    Title = "Default Title",
    Description = "Default Description",
    ImageUrl = "default-image-url.jpg",
    Price = 0.0m,
    CategoryId = 1,
    Category = new OnlineGallery.Models.Category() // Set the required Category property
})
</div>

<div id="edit-artwork-form-container" style="display: none;">
    @await Html.PartialAsync("EditArtworkPartialView", new OnlineGallery.Models.Artwork
{
    Title = "Default Title",
    Description = "Default Description",
    ImageUrl = "default-image-url.jpg",
    Price = 0.0m,
    CategoryId = 1,
    Category = new OnlineGallery.Models.Category() // Set the required Category property
})
</div>

@section Scripts {
    <script>
        // Check if TempData has a token
        @if (TempData["AuthToken"] != null)
        {
            string token = TempData["AuthToken"].ToString();
            <text>
                    localStorage.setItem('authToken', '@token');
            </text>
        }

            function hideAllForms() {
                document.getElementById('add-user-form-container').style.display = 'none';
                document.getElementById('add-artwork-form-container').style.display = 'none';
                document.getElementById('delete-artwork-form-container').style.display = 'none';
                document.getElementById('edit-artwork-form-container').style.display = 'none';
            }

        document.getElementById('load-user-list').addEventListener('click', function () {
            fetch('@Url.Action("GetUserList", "Admin")')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('user-list-container').innerHTML = data;
                });
        });

        document.getElementById('add-user').addEventListener('click', function () {
            hideAllForms();
            document.getElementById('add-user-form-container').style.display = 'block';
            fetch('@Url.Action("AddUser", "Admin")')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('add-user-form-container').innerHTML = data;
                });
        });

        document.getElementById('delete-user').addEventListener('click', function () {
            hideAllForms();
            const userId = prompt("Silmek istediğiniz kullanıcının ID'sini girin:");
            if (userId) {
                const isConfirmed = confirm("Bu kullanıcıyı silmek istediğinizden emin misiniz?");
                if (isConfirmed) {
                    fetch('@Url.Action("DeleteUser", "Admin")', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(userId)
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert(data.success ? 'Kullanıcı başarıyla silindi.' : data.message);
                            document.getElementById('load-user-list').click();
                        });
                }
            }
        });

        document.getElementById('edit-user').addEventListener('click', function () {
            hideAllForms();
            const userId = prompt("Düzenlemek istediğiniz kullanıcının ID'sini girin:");
            if (userId) {
                fetch('@Url.Action("EditUser", "Admin")?userId=' + userId)
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('user-list-container').innerHTML = data;
                    });
            }
        });

        document.getElementById('add-artwork').addEventListener('click', function () {
            hideAllForms();
            document.getElementById('add-artwork-form-container').style.display = 'block';
            fetch('@Url.Action("AddArtwork", "Admin")')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('add-artwork-form-container').innerHTML = data;
                });
        });

        document.getElementById('delete-artwork').addEventListener('click', function () {
            hideAllForms();
            const artworkTitle = prompt("Silmek istediğiniz tablonun adını girin:");
            if (artworkTitle) {
                const isConfirmed = confirm("Bu tabloyu silmek istediğinizden emin misiniz?");
                if (isConfirmed) {
                    console.log(artworkTitle);
                    fetch('@Url.Action("DeleteArtworkByTitle", "Admin")', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ title: artworkTitle })
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert(data.success ? 'Tablo başarıyla silindi.' : data.message);
                            document.getElementById('load-user-list').click();
                        });
                }
            }
        });

        document.getElementById('edit-artwork').addEventListener('click', function () {
            hideAllForms();
            const artworkTitle = prompt("Düzenlemek istediğiniz tablonun adını girin:");
            if (artworkTitle) {
                fetch('@Url.Action("EditArtworkByTitle", "Admin")?title=' + encodeURIComponent(artworkTitle))
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('edit-artwork-form-container').innerHTML = data;
                        document.getElementById('edit-artwork-form-container').style.display = 'block';
                    });
            }
        });
    </script>
}
